{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACgH;AACjB;AACO;AACtG,4CAA4C,yIAA8C;AAC1F,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F,yCAAyC,sFAA+B;AACxE;AACA,sDAAsD,0BAA0B,yEAAyE,qBAAqB,qBAAqB,GAAG,QAAQ,oBAAoB,WAAW,YAAY,kBAAkB,4BAA4B,gBAAgB,iBAAiB,cAAc,eAAe,qBAAqB,8BAA8B,GAAG,SAAS,+FAA+F,WAAW,YAAY,YAAY,WAAW,KAAK,KAAK,UAAU,UAAU,UAAU,UAAU,YAAY,WAAW,UAAU,UAAU,UAAU,WAAW,YAAY,wZAAwZ;AACvkC;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;ACV1B;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,gDAAgD;AAChD;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpFa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzBa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA,MAAqG;AACrG,MAAoG;AACpG,MAAkG;AAClG,MAAqH;AACrH,MAA8G;AAC9G;AACA,MAA0J;AAC1J;AACA;;AAEA;;AAEA;AACA,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,wGAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,8HAAO;;;;AAIoG;AAC5H,OAAO,iEAAe,8HAAO,IAAI,qIAAc,GAAG,qIAAc,YAAY,EAAC;;;;;;;;;;;AC1BhE;;AAEb;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnFa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;AACjF;AACA;AACA;AACA;AACA;;;;;;;;;;ACTa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,oDAAoD;AACpD;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrFe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvC0B;AACA;AACE;AAC5B;AACe;AACf,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yDAAgB,8FAA8F,4DAAmB;AACrI;AACA,YAAY,YAAY,EAAE,6DAAoB;AAC9C;AACA;AACA;AACA;AACA,IAAI,kDAAS,oEAAoE,wDAAe;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC/Be;AACf,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChCe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACjD0C;AACM;AACpB;AACF;AACI;AACF;AAC5B;AACgD;AAChD;AACe;AACf,eAAe,qCAAqC;AACpD;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAM;AACxB;AACA,6BAA6B,qDAAY;AACzC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gCAAgC,wDAAe;AAC/C;AACA,KAAK;AACL;AACA,oBAAoB,8CAAK;AACzB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kDAAS,qDAAqD,wDAAe;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+CAAM;AACtC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA,kCAAkC,+CAAM;AACxC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3Ge;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;;;;;;;;;;;;;;;;;;;AChC0B;AACA;AACA;AACI;AACF;AAC5B;AACe;AACf,gBAAgB,sDAAsD;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yDAAgB,6FAA6F,2DAAkB;AACnI;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mDAAU;AAClE,QAAQ,uCAAuC,mDAAU;AACzD,wDAAwD,mDAAU;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yBAAyB,mDAAU;AAC3C,uCAAuC,mDAAU;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,oDAAW;AACnE,QAAQ,uCAAuC,oDAAW;AAC1D,wDAAwD,oDAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yBAAyB,oDAAW;AAC5C,uCAAuC,oDAAW;AAClD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mFAAmF,mDAAU;AAC7F,mFAAmF,oDAAW;AAC9F;AACA;AACA;AACA;AACA;AACA,oDAAoD,mDAAU;AAC9D,oDAAoD,oDAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,2BAA2B,mDAAU;AACrC,4BAA4B,oDAAW;AACvC;AACA;AACA;AACA;AACA,yCAAyC,mDAAU;AACnD,yCAAyC,oDAAW;AACpD;AACA;AACA;AACA,YAAY,wBAAwB;AACpC;AACA,oBAAoB,aAAa;AACjC;AACA;AACA,sBAAsB,aAAa;AACnC,yBAAyB,6CAAI,GAAG,UAAU,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kEAAyB;AACrD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,6CAAI,GAAG,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrR8B;AACF;AACc;AACR;AAClC;AACe;AACf;AACA;AACA;AACA;AACA;AACA,qBAAqB,+CAAM;AAC3B;AACA,oBAAoB,8CAAK;AACzB;AACA,GAAG;AACH;AACA,2BAA2B,qDAAY;AACvC;AACA;AACA;AACA,GAAG;AACH;AACA,uBAAuB,iDAAQ;AAC/B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,8BAA8B,qCAAqC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,yBAAyB;AACnC,kDAAkD,MAAM;AACxD,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA,UAAU,yBAAyB;AACnC,kDAAkD,MAAM;AACxD,2CAA2C,UAAU;AACrD;AACA;AACA;AACA;AACA,UAAU,yBAAyB;AACnC,kDAAkD,MAAM;AACxD,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA,UAAU,yBAAyB;AACnC,kDAAkD,MAAM;AACxD,0CAA0C,UAAU;AACpD;AACA;AACA,2BAA2B,MAAM;AACjC;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5H0B;AAC1B;AACe;AACf,gBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAgB;AAC/B;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;AC9B0B;AACE;AACF;AAC1B;AACe;AACf,gBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yDAAgB,0FAA0F,2DAAkB;AAChI;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yDAAgB;AAC3C;AACA,QAAQ,yDAAgB;AACxB,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnC0B;AACA;AACI;AACF;AAC5B;AACe;AACf,gBAAgB,qCAAqC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kDAAS,qDAAqD,wDAAe;AACjF;AACA;AACA,cAAc,YAAY,EAAE,6DAAoB;AAChD;AACA;AACA;AACA;AACA,MAAM,kDAAS,oEAAoE,wDAAe;AAClG,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAM;AAClC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA,kCAAkC,+CAAM;AACxC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7Fe;AACf;AACA;AACA;AACA;;;;;;;;;;;;;;ACJe;AACf,eAAe,2BAA2B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnB0B;AACA;AACI;AACF;AAC5B;AACe;AACf,gBAAgB,mDAAmD;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kDAAS,qDAAqD,wDAAe;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY,EAAE,6DAAoB;AAChD;AACA;AACA;AACA;AACA,MAAM,kDAAS,sEAAsE,wDAAe;AACpG,KAAK;AACL;AACA;AACA;AACA,YAAY,mCAAmC,EAAE,6DAAoB;AACrE;AACA;AACA,IAAI,kDAAS,gIAAgI,yDAAgB;AAC7J;AACA,YAAY,+BAA+B,EAAE,6DAAoB;AACjE;AACA;AACA,IAAI,kDAAS,0GAA0G,yDAAgB;AACvI;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+CAAM;AACrC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA,kCAAkC,+CAAM;AACxC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtH0B;AACE;AACQ;AACA;AACI;AACxC;AACe;AACf,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kDAAS,oEAAoE,wDAAe;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kDAAS;AACnC;AACA;AACA;AACA,0BAA0B,kDAAS;AACnC;AACA;AACA;AACA,0BAA0B,oDAAW,GAAG,+CAA+C;AACvF;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpGgD;AAChD;AAC8B;AAC9B;AACe;AACf,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qDAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qDAAM;AACvC;AACA;AACA;AACA;AACA,uBAAuB,kEAAyB;AAChD;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1Ce;AACf;AACA,kBAAkB,SAAS;AAC3B,YAAY,2DAA2D;AACvE,aAAa;AACb;AACA;;;;;;;;;;;;;;;;ACN0B;AACE;AAC5B;AACe;AACf,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yDAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wDAAe;AACnB,IAAI,mDAAU;AACd,IAAI,oDAAW;AACf,IAAI,kDAAS;AACb,IAAI,kDAAS;AACb,IAAI,qDAAY;AAChB,IAAI,qDAAY;AAChB,IAAI,qDAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;UCpDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;;;;WCrBA;;;;;;;;;;;;;ACAgD;AAChD;AACkC;AAClC;AACA;AACA,KAAK,qDAAI;AACT,CAAC,C","sources":["webpack://colored-tiles/./src/assets/styles/index.styl","webpack://colored-tiles/./node_modules/css-loader/dist/runtime/api.js","webpack://colored-tiles/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://colored-tiles/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://colored-tiles/./src/assets/styles/index.styl?899f","webpack://colored-tiles/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://colored-tiles/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://colored-tiles/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://colored-tiles/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://colored-tiles/./node_modules/style-loader/dist/runtime/singletonStyleDomAPI.js","webpack://colored-tiles/./src/modules/Assets.js","webpack://colored-tiles/./src/modules/Button.js","webpack://colored-tiles/./src/modules/Cell.js","webpack://colored-tiles/./src/modules/Color.js","webpack://colored-tiles/./src/modules/CoreScene.js","webpack://colored-tiles/./src/modules/Draw.js","webpack://colored-tiles/./src/modules/Field.js","webpack://colored-tiles/./src/modules/Game.js","webpack://colored-tiles/./src/modules/LevelController.js","webpack://colored-tiles/./src/modules/LevelPreview.js","webpack://colored-tiles/./src/modules/OpenScene.js","webpack://colored-tiles/./src/modules/Random.js","webpack://colored-tiles/./src/modules/Renderer.js","webpack://colored-tiles/./src/modules/ResultScene.js","webpack://colored-tiles/./src/modules/SceneManager.js","webpack://colored-tiles/./src/modules/State.js","webpack://colored-tiles/./src/modules/Text.js","webpack://colored-tiles/./src/modules/Tile.js","webpack://colored-tiles/webpack/bootstrap","webpack://colored-tiles/webpack/runtime/compat get default export","webpack://colored-tiles/webpack/runtime/define property getters","webpack://colored-tiles/webpack/runtime/global","webpack://colored-tiles/webpack/runtime/hasOwnProperty shorthand","webpack://colored-tiles/webpack/runtime/make namespace object","webpack://colored-tiles/webpack/runtime/publicPath","webpack://colored-tiles/webpack/runtime/jsonp chunk loading","webpack://colored-tiles/webpack/runtime/nonce","webpack://colored-tiles/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../fonts/Nunito-Black.woff2\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@font-face {\\n  font-family: 'Nunito';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \") format('woff2');\\n  font-weight: 900;\\n  font-style: #000;\\n}\\nbody {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  display: flex;\\n  justify-content: center;\\n  width: 100%;\\n  height: 100%;\\n  margin: 0;\\n  padding: 0;\\n  overflow: hidden;\\n  background-color: #4daf34;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/assets/styles/index.styl\"],\"names\":[],\"mappings\":\"AAAA;EACE,qBAAY;EACZ,4DAAqC;EACrC,gBAAY;EACZ,gBAAW;AACb;AACA;EACE,eAAS;EACT,MAAI;EACJ,OAAK;EACL,aAAQ;EACR,uBAAgB;EAChB,WAAM;EACN,YAAO;EACP,SAAO;EACP,UAAQ;EACR,gBAAS;EACT,yBAAiB;AACnB\",\"sourcesContent\":[\"@font-face\\r\\n  font-family 'Nunito'\\r\\n  src url('../fonts/Nunito-Black.woff2') format('woff2')\\r\\n  font-weight 900\\r\\n  font-style black\\r\\n\\r\\nbody\\r\\n  position fixed\\r\\n  top 0\\r\\n  left 0\\r\\n  display flex\\r\\n  justify-content center\\r\\n  width 100%\\r\\n  height 100%\\r\\n  margin 0\\r\\n  padding 0\\r\\n  overflow hidden\\r\\n  background-color #4DAF34\\r\\n\\t\\t\\t\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/singletonStyleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      \n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/stylus-loader/dist/cjs.js!./index.styl\";\n      \n      \n\nvar options = {};\n\n;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/stylus-loader/dist/cjs.js!./index.styl\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join(\"\\n\");\n  };\n}();\n\n/* istanbul ignore next  */\nfunction apply(styleElement, index, remove, obj) {\n  var css;\n  if (remove) {\n    css = \"\";\n  } else {\n    css = \"\";\n    if (obj.supports) {\n      css += \"@supports (\".concat(obj.supports, \") {\");\n    }\n    if (obj.media) {\n      css += \"@media \".concat(obj.media, \" {\");\n    }\n    var needLayer = typeof obj.layer !== \"undefined\";\n    if (needLayer) {\n      css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n    }\n    css += obj.css;\n    if (needLayer) {\n      css += \"}\";\n    }\n    if (obj.media) {\n      css += \"}\";\n    }\n    if (obj.supports) {\n      css += \"}\";\n    }\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = styleElement.childNodes;\n    if (childNodes[index]) {\n      styleElement.removeChild(childNodes[index]);\n    }\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index]);\n    } else {\n      styleElement.appendChild(cssNode);\n    }\n  }\n}\nvar singletonData = {\n  singleton: null,\n  singletonCounter: 0\n};\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") return {\n    update: function update() {},\n    remove: function remove() {}\n  };\n\n  // eslint-disable-next-line no-undef,no-use-before-define\n  var styleIndex = singletonData.singletonCounter++;\n  var styleElement =\n  // eslint-disable-next-line no-undef,no-use-before-define\n  singletonData.singleton || (\n  // eslint-disable-next-line no-undef,no-use-before-define\n  singletonData.singleton = options.insertStyleElement(options));\n  return {\n    update: function update(obj) {\n      apply(styleElement, styleIndex, false, obj);\n    },\n    remove: function remove(obj) {\n      apply(styleElement, styleIndex, true, obj);\n    }\n  };\n}\nmodule.exports = domAPI;","export default class Assets {\r\n\tconstructor() {\r\n\t\tthis._assets = {};\r\n\t\tthis._loaded = 0;\r\n\t}\r\n\r\n\tload() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tif (!Assets.DATA.length) resolve();\r\n\t\t\t\r\n\t\t\tAssets.DATA.forEach(source => {\r\n\t\t\t\tconst type = source.url.split('.').pop();\r\n\t\t\t\tif (Assets.IMAGES_TYPES.includes(type)) this._loadImage(source, resolve);\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t_increaseLoaded(resolve) {\r\n\t\tthis._loaded += 1;\r\n\t\tif (this._loaded === Assets.DATA.length) resolve();\r\n\t}\r\n\r\n\t_loadImage(source, resolve) {\r\n\t\tconst image = new Image();\r\n\r\n\t\timage.addEventListener('load', () => {\r\n\t\t\tthis._assets[source.url] = image;\r\n\t\t\tthis._increaseLoaded(resolve);\r\n\t\t})\r\n\r\n\t\timage.src = source.data;\r\n\t}\r\n\r\n\tget(url) {\r\n\t\treturn this._assets[url];\r\n\t}\r\n\r\n\tstatic IMAGES_TYPES = ['png'];\r\n\tstatic DATA = [];\r\n}","import Text from './Text';\r\nimport Draw from './Draw';\r\nimport Color from './Color';\r\n\r\nexport default class Button {\r\n  constructor({ position, size, label }) {\r\n    this._position = position;\r\n    this._size = size;\r\n    this._label = label;\r\n  }\r\n\r\n  render(ctx) {\r\n    Draw.roundedRect(ctx, this._position.x, this._position.y, this._size.width, this._size.height, Button.radius, Color.softGrass.key);\r\n\r\n    const { textWidth } = Text.calcTextMetrics(ctx, this._label, Button.fontSize);\r\n\r\n    const labelPositionX = this._position.x + this._size.width / 2 - textWidth / 2;\r\n    const labelPositionY = this._position.y + this._size.height / 2 + Button.fontSize / 3;\r\n\r\n    Draw.text(ctx, labelPositionX, labelPositionY, this._label, Button.fontSize, Color.white.key);\r\n  }\r\n\r\n  isPressed(clickPosition) {\r\n    return (\r\n      clickPosition.x > this._position.x && clickPosition.x < this._position.x + this._size.width &&\r\n      clickPosition.y > this._position.y && clickPosition.y < this._position.y + this._size.height\r\n    );\r\n  }\r\n\r\n  static fontSize = 32;\r\n  static radius = 37;\r\n}","export default class Cell {\r\n  constructor({ coords }) {\r\n    this._coords = coords;\r\n    this._brick = null;\r\n    this._detachedBrick = null;\r\n  }\r\n\r\n  render(ctx) {\r\n    if (this._brick) this._brick.render(ctx);\r\n  }\r\n\r\n  setBrick(brick) {\r\n    this._brick = brick;\r\n    const detachedBrick = this._detachedBrick;\r\n    this._detachedBrick = null;\r\n    return this._brick !== detachedBrick;\r\n  }\r\n\r\n  getBrick() {\r\n    return this._brick;\r\n  }\r\n\r\n  detachBrick() {\r\n    const brick = this._brick;\r\n    this._detachedBrick = brick;\r\n    this._brick = null;\r\n    return brick;\r\n  }\r\n\r\n  getCoords() {\r\n    return this._coords;\r\n  }\r\n}","export default class Color {\r\n  static grass = {\r\n    id: 1,\r\n    key: '#4DAF34',\r\n  };\r\n  static blueDeep = {\r\n    id: 2,\r\n    key: '#1D3753',\r\n  };\r\n  static blueNight = {\r\n    id: 3,\r\n    key: '#203E60',\r\n  };\r\n  static blue = {\r\n    id: 4,\r\n    key: '#4A5AEC',\r\n  };\r\n  static green = {\r\n    id: 5,\r\n    key: '#73AE37',\r\n  };\r\n  static sea = {\r\n    id: 6,\r\n    key: '#4BD5F5',\r\n  };\r\n  static red = {\r\n    id: 7,\r\n    key: '#D74E23',\r\n  };\r\n  static purple = {\r\n    id: 8,\r\n    key: '#E436EE',\r\n  };\r\n  static orange = {\r\n    id: 9,\r\n    key: '#FF891C',\r\n  };\r\n  static yellow = {\r\n    id: 10,\r\n    key: '#FFC530',\r\n  };\r\n  static white = {\r\n    id: 11,\r\n    key: '#FFFFFF',\r\n  };\r\n  static softGrass = {\r\n    id: 12,\r\n    key: '#5DBB46',\r\n  }\r\n}","import LevelPreview from './LevelPreview';\r\nimport LevelController from './LevelController';\r\nimport Field from './Field';\r\nimport Draw from './Draw';\r\nimport Button from './Button';\r\nimport Color from './Color';\r\n\r\nimport levels from '../assets/json/levels.json';\r\n\r\nexport default class CoreScene {\r\n\tconstructor({ canvas, assets, state, sceneManager }) {\r\n\t\tthis._canvas = canvas;\r\n\t\tthis._assets = assets;\r\n\t\tthis._state = state;\r\n\t\tthis._sceneManager = sceneManager;\r\n\r\n    this._level = levels[state.getLevel()];\r\n\r\n    this._levelPreview = new LevelPreview({\r\n      map: this._level.map,\r\n    });\r\n\r\n    this._passLevelButton = null;\r\n    this._randomLevelButton = null;\r\n    this._initButtons();\r\n\r\n    this._levelController = new LevelController({\r\n      map: this._level.map,\r\n    })\r\n\r\n\t\tthis._field = new Field({\r\n\t\t\tcanvas: this._canvas,\r\n\t\t\tassets: this._assets,\r\n\t\t\tstate: this._state,\r\n\t\t\tsceneManager: this._sceneManager,\r\n      levelController: this._levelController,\r\n\t\t});\r\n\t}\r\n\r\n\tupdate(time) {\r\n\r\n\t}\r\n\r\n\trender(ctx) {\r\n    Draw.rect(ctx, 0, 0, this._canvas.width, this._canvas.height, Color.grass.key);\r\n\r\n    this._levelPreview.render(ctx);\r\n\r\n    if (this._passLevelButton) this._passLevelButton.render(ctx);\r\n    if (this._randomLevelButton) this._randomLevelButton.render(ctx);\r\n\r\n\t\tthis._field.render(ctx);\r\n\t}\r\n\r\n\thandleClick({ position }) {\r\n    if (this._passLevelButton.isPressed(position)) {\r\n      this._state.increaseLevel();\r\n      this._sceneManager.showCoreScene();\r\n    } else if (this._randomLevelButton.isPressed(position)) {\r\n      this._state.setRandomLevel();\r\n      this._sceneManager.showCoreScene();\r\n    }\r\n\t}\r\n\r\n\thandleStartDragging(event) {\r\n\t\tthis._field.handleStartDragging(event);\r\n\t}\r\n\r\n\thandleMoveDragging(event) {\r\n\t\tthis._field.handleMoveDragging(event);\r\n\t}\r\n\r\n\thandleEndDragging(event) {\r\n\t\tthis._field.handleEndDragging(event);\r\n\t}\r\n\r\n  _initButtons() {\r\n    this._passLevelButton = new Button({\r\n      position: {\r\n        x: this._canvas.width - CoreScene.passLevelButtonWidth - 21,\r\n        y: CoreScene.passLevelButtonPositionY,\r\n      },\r\n      size: {\r\n        width: CoreScene.passLevelButtonWidth,\r\n        height: CoreScene.buttonsHeight,\r\n      },\r\n      label: 'Пропустить уровень',\r\n    })\r\n\r\n    this._randomLevelButton = new Button({\r\n      position: {\r\n        x: this._canvas.width - CoreScene.randomLevelButtonWidth - 21,\r\n        y: CoreScene.randomLevelButtonPositionY,\r\n      },\r\n      size: {\r\n        width: CoreScene.randomLevelButtonWidth,\r\n        height: CoreScene.buttonsHeight,\r\n      },\r\n      label: 'Случайный уровень',\r\n    })\r\n  }\r\n\r\n  static passLevelButtonPositionY = 21;\r\n  static passLevelButtonWidth = 414;\r\n  static randomLevelButtonPositionY = 109;\r\n  static randomLevelButtonWidth = 409;\r\n  static buttonsHeight = 74;\r\n}","export default class Draw {\r\n  static rect(ctx, x, y, width, height, color, opacity = 1) {\r\n    ctx.globalAlpha = opacity;\r\n\t\tctx.fillStyle = color;\r\n\t\tctx.fillRect(x, y, width, height);\r\n    ctx.globalAlpha = 1;\r\n  }\r\n\r\n  static roundedRect(ctx, x, y, width, height, radius, color, opacity = 1) {\r\n    ctx.globalAlpha = opacity;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y + radius);\r\n    ctx.arcTo(x, y + height, x + radius, y + height, radius);\r\n    ctx.arcTo(x + width, y + height, x + width, y + height - radius, radius);\r\n    ctx.arcTo(x + width, y, x + width - radius, y, radius);\r\n    ctx.arcTo(x, y, x, y + radius, radius);\r\n    ctx.fill();\r\n    ctx.globalAlpha = 1;\r\n  }\r\n  \r\n  static stroke(ctx, thickness, color) {\r\n    ctx.strokeStyle = color;\r\n    ctx.lineWidth = thickness;\r\n    ctx.stroke();\r\n  }\r\n  \r\n  static text(ctx, x, y, text, size, color) {\r\n    ctx.fillStyle = color;\r\n    ctx.font = `${size}px Nunito`;\r\n    ctx.fillText(text, x, y);\r\n  }\r\n}","import Draw from './Draw';\r\nimport Tile from './Tile';\r\nimport Cell from './Cell';\r\nimport Random from './Random';\r\nimport Color from './Color';\r\n\r\nexport default class Field {\r\n  constructor({ canvas, assets, state, sceneManager, levelController }) {\r\n    this._canvas = canvas;\r\n    this._assets = assets;\r\n    this._state = state;\r\n    this._sceneManager = sceneManager;\r\n    this._levelController = levelController;\r\n\r\n    this._position = {\r\n      x: 0,\r\n      y: 0,\r\n    };\r\n    this._size = {\r\n      width: 0,\r\n      height: 0,\r\n    };\r\n    //this._rowHeight = 0;\r\n    //this._columnWidth = 0;\r\n    this._maxOutOfBoundsX = 0;\r\n    this._maxOutOfBoundsY = 0;\r\n    this._setMetrics();\r\n\r\n    this._map = [];\r\n    this._setMap();\r\n    this._setBricks();\r\n\r\n    this._startDraggingPosition = null;\r\n    this._startDraggingCoords = null;\r\n    this._prevDraggingMovePosition = null;\r\n    this._draggingAxis = null;\r\n    this._detachedBricks = [];\r\n    this._levelComplete = false;\r\n\r\n    this._movesCounter = 0;\r\n  }\r\n\r\n  render(ctx) {\r\n    Draw.roundedRect(ctx, this._position.x, this._position.y, this._size.width, this._size.height, Field.radius, Color.blueDeep.key);\r\n\r\n    this._map.forEach(row => {\r\n      row.forEach(cell => cell.render(ctx));\r\n    });\r\n\r\n    this._detachedBricks.forEach(brick => brick.render(ctx));\r\n  }\r\n\r\n  handleStartDragging({ position }) {\r\n    if (this._levelComplete || !this._isFieldIncludesPosition(position)) return;\r\n\r\n    this._startDraggingPosition = position;\r\n    this._startDraggingCoords = this.getCoordsByPosition(position);\r\n\r\n    this._prevDraggingMovePosition = position;\r\n  }\r\n\r\n  handleMoveDragging({ position }) {\r\n    if (!this._startDraggingPosition || !this._startDraggingCoords) return;\r\n\r\n    if (!this._draggingAxis) this._setDraggingAxis(position);\r\n\r\n    if (!this._detachedBricks.length) this._detachBricks();\r\n\r\n    if (this._draggingAxis === 'x') this._moveRow(position);\r\n    else this._moveColumn(position);\r\n\r\n    this._prevDraggingMovePosition = position;\r\n  }\r\n\r\n  _setDraggingAxis(draggingPosition) {\r\n    const xOffset = this._startDraggingPosition.x - draggingPosition.x;\r\n    const yOffset = this._startDraggingPosition.y - draggingPosition.y;\r\n\r\n    this._draggingAxis = Math.abs(xOffset) > Math.abs(yOffset) ? 'x' : 'y';\r\n  }\r\n\r\n  handleEndDragging(event) {\r\n    if (!this._detachedBricks.length) return;\r\n\r\n    const axis = this._draggingAxis;\r\n    this._detachedBricks.sort((a, b) => a.getPosition()[axis] - b.getPosition()[axis]);\r\n\r\n    let bricksWasUpdated = false;\r\n\r\n    if (axis === 'x') {\r\n      this._map[this._startDraggingCoords.y].forEach(cell => {\r\n        const brickWasUpdated = this._attachFirstDetachedBrickToCell(cell);\r\n        bricksWasUpdated = bricksWasUpdated || brickWasUpdated;\r\n      });\r\n    } else {\r\n      this._map.forEach(row => {\r\n        const cell = row[this._startDraggingCoords.x];\r\n        const brickWasUpdated = this._attachFirstDetachedBrickToCell(cell);\r\n        bricksWasUpdated = bricksWasUpdated || brickWasUpdated;\r\n      });\r\n    }\r\n\r\n    if (bricksWasUpdated) this._movesCounter += 1;\r\n\r\n    this._startDraggingPosition = null;\r\n    this._startDraggingCoords = null;\r\n    this._prevDraggingMovePosition = null;\r\n    this._draggingAxis = null;\r\n\r\n    this._handleDraggingResult();\r\n  }\r\n\r\n  _attachFirstDetachedBrickToCell(cell) {\r\n    const coords = cell.getCoords();\r\n    const brick = this._detachedBricks.shift();\r\n\r\n    const position = this.getPositionByCoords(coords);\r\n    brick.setPosition(position);\r\n    brick.setOpacity(1);\r\n\r\n    return cell.setBrick(brick);\r\n  }\r\n\r\n  _handleDraggingResult() {\r\n    this._levelComplete = this._levelController.isMatch(this._map);\r\n    if (this._levelComplete) {\r\n      setTimeout(() => {\r\n        this._sceneManager.showResultScene(this._movesCounter);\r\n      }, 1500)\r\n    }\r\n  }\r\n\r\n  _detachBricks() {\r\n    this._detachedBricks = this._draggingAxis === 'x' ?\r\n      this._map[this._startDraggingCoords.y].map(cell => cell.detachBrick()) :\r\n      this._map.map(row => row[this._startDraggingCoords.x].detachBrick());\r\n  }\r\n\r\n  _moveRow(position) {\r\n    const offset = position.x - this._prevDraggingMovePosition.x;\r\n\r\n    this._detachedBricks.forEach(brick => {\r\n      const currentPosition = brick.getPosition();\r\n\r\n      const newPosition = {\r\n        x: currentPosition.x + offset,\r\n        y: currentPosition.y,\r\n      }\r\n\r\n      if (offset < 0 && newPosition.x < this._position.x + Field.padding - this._maxOutOfBoundsX) {\r\n        newPosition.x += this._detachedBricks.length * (Tile.width + Field.gap);\r\n      } else if (offset > 0 && newPosition.x + Tile.width > this._position.x + this._size.width - Field.padding + this._maxOutOfBoundsX) {\r\n        newPosition.x -= this._detachedBricks.length * (Tile.width + Field.gap);\r\n      }\r\n\r\n      let opacity = 1;\r\n\r\n      if (newPosition.x < this._position.x + Field.padding) {\r\n        opacity = 1 - (this._position.x + Field.padding - newPosition.x) / this._maxOutOfBoundsX;\r\n      } else if (newPosition.x + Tile.width > this._position.x + this._size.width - Field.padding) {\r\n        opacity = 1 - (newPosition.x + Tile.width - (this._position.x + this._size.width - Field.padding)) / this._maxOutOfBoundsX;\r\n      }\r\n\r\n      brick.setOpacity(opacity);\r\n      brick.setPosition(newPosition);\r\n    })\r\n  }\r\n\r\n  _moveColumn(position) {\r\n    const offset = position.y - this._prevDraggingMovePosition.y;\r\n\r\n    this._detachedBricks.forEach(brick => {\r\n      const currentPosition = brick.getPosition();\r\n\r\n      const newPosition = {\r\n        x: currentPosition.x,\r\n        y: currentPosition.y + offset,\r\n      }\r\n\r\n      if (offset < 0 && newPosition.y < this._position.y + Field.padding - this._maxOutOfBoundsY) {\r\n        newPosition.y += this._detachedBricks.length * (Tile.height + Field.gap);\r\n      } else if (offset > 0 && newPosition.y + Tile.height > this._position.y + this._size.height - Field.padding + this._maxOutOfBoundsY) {\r\n        newPosition.y -= this._detachedBricks.length * (Tile.height + Field.gap);\r\n      }\r\n\r\n      let opacity = 1;\r\n\r\n      if (newPosition.y < this._position.y + Field.padding) {\r\n        opacity = 1 - (this._position.y + Field.padding - newPosition.y) / this._maxOutOfBoundsY;\r\n      } else if (newPosition.y + Tile.height > this._position.y + this._size.height - Field.padding) {\r\n        opacity = 1 - (newPosition.y + Tile.height - (this._position.y + this._size.height - Field.padding)) / this._maxOutOfBoundsY;\r\n      }\r\n\r\n      brick.setOpacity(opacity);\r\n      brick.setPosition(newPosition);\r\n    })\r\n  }\r\n\r\n  getCoordsByPosition(position) {\r\n    return {\r\n      x: Math.floor((position.x - this._position.x - Field.padding) / (Field.gap + Tile.width)),\r\n      y: Math.floor((position.y - this._position.y - Field.padding) / (Field.gap + Tile.height)),\r\n    }\r\n  }\r\n\r\n  getPositionByCoords(coords) {\r\n    return {\r\n      x: this._position.x + coords.x * (Field.gap + Tile.width) + Field.padding,\r\n      y: this._position.y + coords.y * (Field.gap + Tile.height) + Field.padding,\r\n    }\r\n  }\r\n\r\n  _getCellByCoords(coords) {\r\n    return this._map[coords.y][coords.x]\r\n  }\r\n\r\n  _isFieldIncludesPosition(position) {\r\n    return (\r\n      position.x > this._position.x + Field.padding && position.x < this._position.x + this._size.width - Field.padding &&\r\n      position.y > this._position.y + Field.padding && position.y < this._position.y + this._size.height - Field.padding\r\n    );\r\n  }\r\n\r\n  _setMetrics() {\r\n    const { x, y } = this._levelController.getMapLengths();\r\n\r\n    this._size.width = x * Tile.width + (x - 1) * Field.gap + Field.padding * 2;\r\n    this._size.height = y * Tile.height + (y - 1) * Field.gap + Field.padding * 2;\r\n\r\n    this._position.x = this._canvas.width / 2 - this._size.width / 2;\r\n    this._position.y = this._canvas.height / 2 - this._size.height / 2;\r\n\r\n    this._maxOutOfBoundsX = (Field.gap + Tile.width) / 2;\r\n    this._maxOutOfBoundsY = (Field.gap + Tile.height) / 2;\r\n  }\r\n\r\n  _setMap() {\r\n    const { x: xLength, y: yLength} = this._levelController.getMapLengths();\r\n\r\n    for (let y = 0; y < yLength; y++) {\r\n\r\n      const row = [];\r\n      for (let x = 0; x < xLength; x++) {\r\n        const cell = new Cell({ coords: { x, y }});\r\n        row.push(cell);\r\n      }\r\n\r\n      this._map.push(row);\r\n    }\r\n  }\r\n\r\n  _setBricks() {\r\n    let colorsCounters = this._levelController.getColorsCounters();\r\n\r\n    this._map.forEach(row => {\r\n      row.forEach(cell => {\r\n        const coords = cell.getCoords();\r\n\r\n        colorsCounters = colorsCounters.filter(colorCounter => colorCounter.counter);\r\n        const randomIndex = Random.getRandomFromRange(0, colorsCounters.length - 1);\r\n        const colorCounter = colorsCounters[randomIndex];\r\n        colorCounter.counter -= 1;\r\n\r\n        const brick = this._createBrick(coords, colorCounter.color);\r\n        cell.setBrick(brick);\r\n      })\r\n    })\r\n  }\r\n\r\n  _createBrick(coords, color) {\r\n    const position = this.getPositionByCoords(coords);\r\n    return new Tile({ color, position });\r\n  }\r\n\r\n  static padding = 19;\r\n  static gap = 10;\r\n  static radius = 44;\r\n}","import Assets from './Assets';\r\nimport State from './State';\r\nimport SceneManager from './SceneManager';\r\nimport Renderer from './Renderer';\r\n\r\nexport default class Game {\r\n\tconstructor(canvas) {\r\n\t\tthis._canvas = canvas;\r\n\t\tthis._ctx = canvas.getContext('2d');\r\n\t\tthis._setRenderSize()\r\n\r\n\t\tthis._assets = new Assets();\r\n\r\n\t\tthis._state = new State({\r\n\t\t\tassets: this._assets,\r\n\t\t});\r\n\r\n\t\tthis._sceneManager = new SceneManager({\r\n\t\t\tcanvas: this._canvas,\r\n\t\t\tassets: this._assets,\r\n\t\t\tstate: this._state,\r\n\t\t});\r\n\r\n\t\tthis._renderer = new Renderer({\r\n\t\t\tcanvas: this._canvas,\r\n\t\t\tctx: this._ctx,\r\n\t\t\tsceneManager: this._sceneManager,\r\n\t\t});\r\n\r\n\t\tthis._prevTimestamp = null;\r\n\t\tthis._draggingStarted = false;\r\n\r\n\t\tthis._addEventHandlers();\r\n\t\tthis._startGame();\r\n\t}\r\n\r\n\tasync _startGame() {\r\n\t\tawait this._assets.load();\r\n\t\tthis._sceneManager.showOpenScene();\r\n\r\n\t\trequestAnimationFrame(timestamp => {\r\n\t\t\tthis._gameLoop(timestamp);\r\n\t\t});\r\n\t}\r\n\t\r\n\t_gameLoop(timestamp) {\r\n\t\trequestAnimationFrame(nextTimestamp => {\r\n\t\t\tthis._gameLoop(nextTimestamp);\r\n\t\t});\r\n\r\n\t\tconst prevTimestamp = this._prevTimestamp || timestamp;\r\n\t\tconst prevFrameDuration = timestamp - prevTimestamp;\r\n\t\tconst delta = prevFrameDuration / 1000;\r\n\t\tthis._sceneManager.update({ delta, prevFrameDuration, timestamp });\r\n\t\tthis._prevTimestamp = timestamp;\r\n\r\n\t\tthis._renderer.render();\r\n\t}\r\n\r\n\t_addEventHandlers() {\r\n\t\tthis._canvas.addEventListener('click', event => this._handleClick(event))\r\n\t\tthis._canvas.addEventListener('mousedown', event => this._handleStartDragging(event))\r\n\t\twindow.addEventListener('mousemove', event => this._handleMoveDragging(event))\r\n\t\twindow.addEventListener('mouseup', event => this._handleEndDragging(event))\r\n\t\tthis._canvas.addEventListener('touchstart', event => this._handleStartDragging(event));\r\n\t\twindow.addEventListener('touchmove', event => this._handleMoveDragging(event));\r\n\t\twindow.addEventListener('touchend', event => this._handleEndDragging(event));\r\n\t\twindow.addEventListener('resize', () => this._setRenderSize());\r\n\t}\r\n\r\n\t_handleClick(event) {\r\n\t\tconst { clientX: x, clientY: y } = event;\r\n\t\tconst position = this._transformClickPosition({ x, y });\r\n\t\tthis._sceneManager.handleClick({ position });\r\n\t}\r\n\r\n\t_handleStartDragging(event) {\r\n\t\tthis._draggingStarted = true;\r\n\t\tconst { clientX: x, clientY: y } = event.touches?.[0] || event;\r\n\t\tconst position = this._transformClickPosition({ x, y });\r\n\t\tthis._sceneManager.handleStartDragging({ position });\r\n\t}\r\n\r\n\t_handleEndDragging(event) {\r\n\t\tthis._draggingStarted = false;\r\n\t\tconst { clientX: x, clientY: y } = event.touches?.[0] || event;\r\n\t\tconst position = this._transformClickPosition({ x, y });\r\n\t\tthis._sceneManager.handleEndDragging({ position });\r\n\t}\r\n\r\n\t_handleMoveDragging(event) {\r\n\t\tif (!this._draggingStarted) return;\r\n\t\tconst { clientX: x, clientY: y } = event.touches?.[0] || event;\r\n\t\tconst position = this._transformClickPosition({ x, y });\r\n\t\tthis._sceneManager.handleMoveDragging({ position });\r\n\t}\r\n\r\n\t_transformClickPosition({ x, y }) {\r\n\t\tx = x - this._canvas.getBoundingClientRect().left;\r\n\t\tx = x * (this._canvas.width / parseFloat(this._canvas.style.width));\r\n\t\ty = y - this._canvas.getBoundingClientRect().top;\r\n\t\ty = y * (this._canvas.height / parseFloat(this._canvas.style.height));\r\n\t\treturn { x, y };\r\n\t}\r\n\r\n\t_setRenderSize() {\r\n\t\tconst screenWidth = document.documentElement.clientWidth;\r\n\t\tconst screenHeight = document.documentElement.clientHeight;\r\n\t\t\r\n\t\tlet aspectRatio = this._canvas.width / this._canvas.height;\r\n\r\n\t\tlet renderHeight = screenHeight;\r\n\t\tlet renderWidth = renderHeight * aspectRatio;\r\n\r\n\t\tif (renderWidth > screenWidth) {\r\n\t\t\taspectRatio = this._canvas.height / this._canvas.width;\r\n\r\n\t\t\trenderWidth = screenWidth;\r\n\t\t\trenderHeight = renderWidth * aspectRatio;\r\n\t\t}\r\n\r\n\t\tthis._canvas.style.width = renderWidth + 'px';\r\n\t\tthis._canvas.style.height = renderHeight + 'px';\r\n\t}\r\n}\r\n","import Tile from './Tile';\r\n\r\nexport default class LevelController {\r\n  constructor({ map }) {\r\n    this._map = map;\r\n  }\r\n\r\n  isMatch(currentFieldMap) {\r\n    return currentFieldMap.every((row, y) => {\r\n      return row.every((cell, x) => cell.getBrick().getColor().id === this._map[y][x]);\r\n    })\r\n  }\r\n\r\n  getMapLengths() {\r\n    return {\r\n      x: this._map[0].length,\r\n      y: this._map.length,\r\n    }\r\n  }\r\n\r\n  getColorsCounters() {\r\n    const colorsId = this._map.flat();\r\n    const uniqueColorsId = Array.from(new Set(colorsId));\r\n    return uniqueColorsId.map(id => {\r\n      return {\r\n        color: Tile.colors.find(color => color.id === id),\r\n        counter: colorsId.filter(colorId => colorId === id).length,\r\n      }\r\n    })\r\n  }\r\n}","import Draw from './Draw';\r\nimport Color from './Color';\r\nimport Tile from './Tile';\r\n\r\nexport default class LevelPreview {\r\n  constructor({ map }) {\r\n    this._map = map;\r\n  }\r\n\r\n  render(ctx) {\r\n    const width = LevelPreview.padding * 2 + this._map[0].length * LevelPreview.brickWidth + LevelPreview.gap * (this._map[0].length - 1);\r\n    const height = LevelPreview.padding * 2 + this._map.length * LevelPreview.brickHeight + LevelPreview.gap * (this._map.length - 1);\r\n\r\n    Draw.roundedRect(ctx, LevelPreview.positionX, LevelPreview.positionY, width, height, LevelPreview.radius, Color.blueDeep.key);\r\n\r\n    this._map.forEach((row, y) => {\r\n      row.forEach((colorId, x) => {\r\n        const brickPositionX = LevelPreview.positionX + LevelPreview.padding + (LevelPreview.brickWidth + LevelPreview.gap) * x;\r\n        const brickPositionY = LevelPreview.positionY + LevelPreview.padding + (LevelPreview.brickHeight + LevelPreview.gap) * y;\r\n\r\n        const brickColor = Tile.colors.find(color => color.id === colorId);\r\n\r\n        Draw.roundedRect(ctx, brickPositionX, brickPositionY, LevelPreview.brickWidth, LevelPreview.brickHeight, LevelPreview.brickRadius, brickColor.key);\r\n      });\r\n    });\r\n  }\r\n\r\n  static positionX = 21;\r\n  static positionY = 21;\r\n  static padding = 6;\r\n  static gap = 2;\r\n  static radius = 16;\r\n  static brickWidth = 26;\r\n  static brickHeight = 26;\r\n  static brickRadius = 10;\r\n}","import Draw from './Draw';\r\nimport Text from './Text';\r\nimport Button from './Button';\r\nimport Color from './Color';\r\n\r\nexport default class OpenScene {\r\n  constructor({ canvas, assets, state, sceneManager }) {\r\n    this._canvas = canvas;\r\n\t\tthis._assets = assets;\r\n\t\tthis._state = state;\r\n    this._sceneManager = sceneManager;\r\n\r\n    this._startButton = null;\r\n    this._randomLevelButton = null;\r\n    this._initButtons();\r\n  }\r\n\r\n  update(time) {\r\n    \r\n  }\r\n\r\n  render(ctx) {\r\n    Draw.rect(ctx, 0, 0, this._canvas.width, this._canvas.height, Color.grass.key);\r\n\r\n    OpenScene.label.split(' ').forEach((string, index) => {\r\n      const { textWidth } = Text.calcTextMetrics(ctx, string, OpenScene.fontSize);\r\n\r\n      const stringPositionX = this._canvas.width / 2 - textWidth / 2;\r\n      const stringPositionY = OpenScene.labelPositionY + (index * OpenScene.lineHeight) + OpenScene.fontSize;\r\n\r\n      Draw.text(ctx, stringPositionX, stringPositionY, string, OpenScene.fontSize, Color.white.key);\r\n    })\r\n\r\n    if (this._startButton) this._startButton.render(ctx);\r\n    if (this._randomLevelButton) this._randomLevelButton.render(ctx);\r\n  }\r\n\r\n  handleClick({ position }) {\r\n    if (this._startButton.isPressed(position)) {\r\n      this._sceneManager.showCoreScene();\r\n    } else if (this._randomLevelButton.isPressed(position)) {\r\n      this._state.setRandomLevel();\r\n      this._sceneManager.showCoreScene();\r\n    }\r\n  }\r\n\r\n  handleStartDragging() {\r\n\r\n  }\r\n\r\n  handleMoveDragging() {\r\n\r\n  }\r\n\r\n  handleEndDragging() {\r\n\r\n  }\r\n\r\n  _initButtons() {\r\n    this._startButton = new Button({\r\n      position: {\r\n        x: this._canvas.width / 2 - OpenScene.startButtonWidth / 2,\r\n        y: OpenScene.startButtonPositionY,\r\n      },\r\n      size: {\r\n        width: OpenScene.startButtonWidth,\r\n        height: OpenScene.buttonsHeight,\r\n      },\r\n      label: 'От простого к сложному',\r\n    })\r\n\r\n    this._randomLevelButton = new Button({\r\n      position: {\r\n        x: this._canvas.width / 2 - OpenScene.randomLevelButtonWidth / 2,\r\n        y: OpenScene.randomLevelButtonPositionY,\r\n      },\r\n      size: {\r\n        width: OpenScene.randomLevelButtonWidth,\r\n        height: OpenScene.buttonsHeight,\r\n      },\r\n      label: 'Случайный уровень',\r\n    })\r\n  }\r\n\r\n  static label = 'Colored Tiles';\r\n  static fontSize = 96;\r\n  static lineHeight = 100;\r\n  static labelPositionY = 401;\r\n  static startButtonPositionY = 681;\r\n  static startButtonWidth = 482;\r\n  static randomLevelButtonPositionY = 769;\r\n  static randomLevelButtonWidth = 409;\r\n  static buttonsHeight = 74;\r\n}","export default class Random {\r\n  static getRandomFromRange(from, to) {\r\n    return from === to ? from : from + Math.round(Math.random() * (to - from));\r\n  }\r\n}","export default class Renderer {\r\n\tconstructor({ ctx, canvas, sceneManager }) {\r\n\t\tthis._canvas = canvas;\r\n\t\tthis._ctx = ctx;\r\n\t\tthis._sceneManager = sceneManager;\r\n\t}\r\n\r\n\trender() {\r\n\t\tthis._clear();\r\n\t\tthis._renderScene();\r\n\t}\r\n\r\n\t_clear() {\r\n\t\tthis._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n\t}\r\n\r\n\t_renderScene() {\r\n\t\tthis._sceneManager.render(this._ctx);\r\n\t}\r\n}","import Draw from './Draw';\r\nimport Text from './Text';\r\nimport Button from './Button';\r\nimport Color from './Color';\r\n\r\nexport default class ResultScene {\r\n  constructor({ canvas, assets, state, sceneManager, movesCounter }) {\r\n    this._canvas = canvas;\r\n\t\tthis._assets = assets;\r\n\t\tthis._state = state;\r\n    this._sceneManager = sceneManager;\r\n    this._movesCounter = movesCounter;\r\n\r\n    this._continueButton = null;\r\n    this._randomLevelButton = null;\r\n    this._initButtons();\r\n  }\r\n\r\n  update(time) {\r\n    \r\n  }\r\n\r\n  render(ctx) {\r\n    Draw.rect(ctx, 0, 0, this._canvas.width, this._canvas.height, Color.grass.key);\r\n\r\n    this._renderLabel(ctx);\r\n\r\n    this._renderMovesCounter(ctx);\r\n\r\n    if (this._continueButton) this._continueButton.render(ctx);\r\n    if (this._randomLevelButton) this._randomLevelButton.render(ctx);\r\n  }\r\n\r\n  _renderLabel(ctx) {\r\n    ResultScene.label.split(' ').forEach((string, index) => {\r\n      const { textWidth } = Text.calcTextMetrics(ctx, string, ResultScene.fontSize);\r\n\r\n      const stringPositionX = this._canvas.width / 2 - textWidth / 2;\r\n      const stringPositionY = ResultScene.labelPositionY + (index * ResultScene.lineHeight) + ResultScene.fontSize;\r\n\r\n      Draw.text(ctx, stringPositionX, stringPositionY, string, ResultScene.fontSize, Color.white.key);\r\n    })\r\n  }\r\n\r\n  _renderMovesCounter(ctx) {\r\n    const { textWidth: movesCounterHintWidth } = Text.calcTextMetrics(ctx, ResultScene.movesCounterHint, ResultScene.movesCounterHintFontSize);\r\n    const movesCounterHintPositionX = this._canvas.width / 2 - movesCounterHintWidth / 2;\r\n    const movesCounterHintPositionY = ResultScene.movesCounterHintPositionY + ResultScene.movesCounterHintFontSize;\r\n    Draw.text(ctx, movesCounterHintPositionX, movesCounterHintPositionY, ResultScene.movesCounterHint, ResultScene.movesCounterHintFontSize, Color.yellow.key);\r\n\r\n    const { textWidth: movesCounterWidth } = Text.calcTextMetrics(ctx, this._movesCounter, ResultScene.movesCounterFontSize);\r\n    const movesCounterPositionX = this._canvas.width / 2 - movesCounterWidth / 2;\r\n    const movesCounterPositionY = ResultScene.movesCounterPositionY + ResultScene.movesCounterFontSize;\r\n    Draw.text(ctx, movesCounterPositionX, movesCounterPositionY, this._movesCounter, ResultScene.movesCounterFontSize, Color.yellow.key);\r\n  }\r\n\r\n  handleClick({ position }) {\r\n    if (this._continueButton.isPressed(position)) {\r\n      this._state.increaseLevel();\r\n      this._sceneManager.showCoreScene();\r\n    } else if (this._randomLevelButton.isPressed(position)) {\r\n      this._state.setRandomLevel();\r\n      this._sceneManager.showCoreScene();\r\n    }\r\n  }\r\n\r\n  handleStartDragging() {\r\n\r\n  }\r\n\r\n  handleMoveDragging() {\r\n\r\n  }\r\n\r\n  handleEndDragging() {\r\n\r\n  }\r\n\r\n  _initButtons() {\r\n    this._continueButton = new Button({\r\n      position: {\r\n        x: this._canvas.width / 2 - ResultScene.continueButtonWidth / 2,\r\n        y: ResultScene.continueButtonPositionY,\r\n      },\r\n      size: {\r\n        width: ResultScene.continueButtonWidth,\r\n        height: ResultScene.buttonsHeight,\r\n      },\r\n      label: 'Следующий уровень',\r\n    })\r\n\r\n    this._randomLevelButton = new Button({\r\n      position: {\r\n        x: this._canvas.width / 2 - ResultScene.randomLevelButtonWidth / 2,\r\n        y: ResultScene.randomLevelButtonPositionY,\r\n      },\r\n      size: {\r\n        width: ResultScene.randomLevelButtonWidth,\r\n        height: ResultScene.buttonsHeight,\r\n      },\r\n      label: 'Случайный уровень',\r\n    })\r\n  }\r\n\r\n  static label = 'Уровень пройден!';\r\n  static fontSize = 72;\r\n  static lineHeight = 76;\r\n  static labelPositionY = 318;\r\n  static movesCounterHint = 'Ходов:';\r\n  static movesCounterHintFontSize = 48;\r\n  static movesCounterHintPositionY = 530;\r\n  static movesCounterFontSize = 96;\r\n  static movesCounterPositionY = 584;\r\n  static continueButtonPositionY = 765;\r\n  static continueButtonWidth = 420;\r\n  static randomLevelButtonPositionY = 853;\r\n  static randomLevelButtonWidth = 409;\r\n  static buttonsHeight = 74;\r\n}","import Draw from './Draw';\r\nimport Color from './Color';\r\nimport OpenScene from './OpenScene';\r\nimport CoreScene from './CoreScene';\r\nimport ResultScene from './ResultScene';\r\n\r\nexport default class SceneManager {\r\n\tconstructor({ canvas, assets, state }) {\r\n\t\tthis._canvas = canvas;\r\n\t\tthis._assets = assets;\r\n\t\tthis._state = state;\r\n\r\n\t\tthis._currentScene = null;\r\n\t\tthis._futureScene = null;\r\n\r\n\t\tthis._transitionOverlayOffsetX = 1;\r\n\t}\r\n\r\n\tupdate(time) {\r\n\t\tif (this._currentScene) this._currentScene.update(time);\r\n\r\n\t\tif (this._futureScene) this._updateSceneOut(time);\r\n\t\telse if (this._transitionOverlayOffsetX <= 0) this._updateSceneIn(time);\r\n\t}\r\n\r\n\t_updateSceneOut({ prevFrameDuration }) {\r\n\t\tif (!this._currentScene || this._transitionOverlayOffsetX === 0) {\r\n\t\t\tthis._currentScene = this._futureScene;\r\n\t\t\tthis._futureScene = null;\r\n\t\t} else  {\r\n\t\t\tthis._transitionOverlayOffsetX = Math.max(this._transitionOverlayOffsetX - prevFrameDuration / SceneManager.transitionDuration, 0);\r\n\t\t}\r\n\t}\r\n\r\n\t_updateSceneIn({ prevFrameDuration }) {\r\n\t\tthis._transitionOverlayOffsetX = Math.max(this._transitionOverlayOffsetX - prevFrameDuration / SceneManager.transitionDuration, -1);\r\n\r\n\t\tif (this._transitionOverlayOffsetX === -1) this._transitionOverlayOffsetX = 1;\r\n\t}\r\n\r\n\trender(ctx) {\r\n\t\tif (this._currentScene) this._currentScene.render(ctx);\r\n\t\tif (this._transitionOverlayOffsetX !== 1) this._renderTransitionOverlay(ctx);\r\n\t}\r\n\r\n\t_renderTransitionOverlay(ctx) {\r\n\t\tconst overlayPositionX = this._canvas.width * this._transitionOverlayOffsetX;\r\n\t\tDraw.rect(ctx, overlayPositionX, 0, this._canvas.width, this._canvas.height, Color.grass.key)\r\n\t}\r\n\r\n\t_getScenesCommonProps() {\r\n\t\treturn {\r\n\t\t\tcanvas: this._canvas,\r\n\t\t\tassets: this._assets,\r\n\t\t\tstate: this._state,\r\n\t\t\tsceneManager: this,\r\n\t\t}\r\n\t}\r\n\r\n\t_isInTransition() {\r\n\t\treturn this._futureScene || this._transitionOverlayOffsetX !== 1;\r\n\t}\r\n\r\n\thandleClick(event) {\r\n\t\tif (this._isInTransition()) return;\r\n\r\n\t\tif (this._currentScene) this._currentScene.handleClick(event);\r\n\t}\r\n\r\n\thandleStartDragging(event) {\r\n\t\tif (this._isInTransition()) return;\r\n\r\n\t\tif (this._currentScene) this._currentScene.handleStartDragging(event);\r\n\t}\r\n\r\n\thandleMoveDragging(event) {\r\n\t\tif (this._isInTransition()) return;\r\n\r\n\t\tif (this._currentScene) this._currentScene.handleMoveDragging(event);\r\n\t}\r\n\r\n\thandleEndDragging(event) {\r\n\t\tif (this._isInTransition()) return;\r\n\r\n\t\tif (this._currentScene) this._currentScene.handleEndDragging(event);\r\n\t}\r\n\r\n\tshowOpenScene() {\r\n\t\tthis._futureScene = new OpenScene(this._getScenesCommonProps());\r\n\t}\r\n\r\n\tshowCoreScene() {\r\n\t\tthis._futureScene = new CoreScene(this._getScenesCommonProps());\r\n\t}\r\n\r\n\tshowResultScene(movesCounter) {\r\n\t\tthis._futureScene = new ResultScene({ ...this._getScenesCommonProps(), movesCounter });\r\n\t}\r\n\r\n\tstatic transitionDuration = 300;\r\n}","import levels from '../assets/json/levels.json';\r\n\r\nimport Random from './Random';\r\n\r\nexport default class State {\r\n\tconstructor({ assets }) {\r\n\t\tthis._assets = assets;\r\n\r\n\t\tthis._level = 1;\r\n\t\tthis._gold = 0;\r\n\t}\r\n\r\n\tincreaseLevel() {\r\n\t\tconst nextLevel = this._level + 1;\r\n\t\tif (levels[nextLevel]) this._level = nextLevel;\r\n\t\telse this._level = 1;\r\n\t}\r\n\r\n\tresetLevel() {\r\n\t\tthis._level = 1;\r\n\t}\r\n\r\n\tsetRandomLevel() {\r\n\t\tconst levelsKeys = Object.keys(levels);\r\n\r\n\t\tlet level = null;\r\n\r\n\t\tdo {\r\n\t\t\tconst randomIndex = Random.getRandomFromRange(0, levelsKeys.length - 1);\r\n\t\t\tlevel = parseInt(levelsKeys[randomIndex]);\r\n\t\t} while (level === this._level)\r\n\t\t\r\n\t\tthis._level = level;\r\n\t}\r\n\r\n\tsetLevel(level) {\r\n\t\tthis._level = level;\r\n\t}\r\n\r\n\tgetLevel() {\r\n\t\treturn this._level;\r\n\t}\r\n}","export default class Text {\r\n  static calcTextMetrics(ctx, text, fontSize) {\r\n    ctx.font = `${fontSize}px Nunito`;\r\n    const { width, actualBoundingBoxAscent, actualBoundingBoxDescent } = ctx.measureText(text);\r\n    return { textWidth: width, textHeight: actualBoundingBoxAscent + actualBoundingBoxDescent }\r\n  }\r\n}","import Draw from './Draw';\r\nimport Color from './Color';\r\n\r\nexport default class Tile {\r\n  constructor({ color, position }) {\r\n    this._color = color;\r\n    this._position = position;\r\n    this._opacity = 1;\r\n  }\r\n\r\n  render(ctx) {\r\n    Draw.roundedRect(ctx, this._position.x, this._position.y, Tile.width, Tile.height, Tile.radius, this._color.key, this._opacity);\r\n  }\r\n\r\n  getPosition() {\r\n    return this._position;\r\n  }\r\n\r\n  setPosition(position) {\r\n    this._position = position;\r\n  }\r\n\r\n  getColor() {\r\n    return this._color;\r\n  }\r\n\r\n  getOpacity() {\r\n    return this._opacity;\r\n  }\r\n\r\n  setOpacity(opacity) {\r\n    this._opacity = opacity;\r\n  }\r\n\r\n  static width = 95;\r\n  static height = 95;\r\n  static radius = 30;\r\n  static colors = [\r\n    Color.blueNight,\r\n    Color.blue,\r\n    Color.green,\r\n    Color.sea,\r\n    Color.red,\r\n    Color.purple,\r\n    Color.orange,\r\n    Color.yellow,\r\n  ];\r\n\r\n  static getRandomBrickColor() {\r\n    const index = Random.getRandomFromRange(0, Tile.colors.length - 1);\r\n    return Tile.colors[index];\r\n  }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","import styles from './assets/styles/index.styl';\r\n\r\nimport Game from './modules/Game';\r\n\r\naddEventListener('DOMContentLoaded', () => {\r\n\tnew Game(document.getElementById('colored-tiles'));\r\n})"],"names":[],"sourceRoot":""}